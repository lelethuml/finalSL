# Stage 1: Build the Angular app
# FROM node:slim
# WORKDIR /app
# COPY package*.json /app/
# RUN npm install
# COPY ./ /app/
# RUN npm run build -- --output-path=./dist

# Stage 2: Serve the built app with the backend server
# FROM node:slim
# WORKDIR /app
# COPY --from=build-stage /app/dist/ /app/
# COPY --from=build-stage /SecureLegacy/server.js /app/
# COPY --from=build-stage /SecureLegacy/package*.json /app/
# RUN npm ci --only=production
# EXPOSE 3000
# CMD node server.js


# FROM node:latest as node
# WORKDIR /app
# COPY . .
# RUN npm install
# RUN npm run build --prod
# CMD ng serve

# FROM nginx:alpine
# COPY --from=node /app/dist/frontend /usr/share/nginx/
# EXPOSE 80


# Stage 1: Build the Angular app
FROM node:18-alpine as build
WORKDIR /app
COPY package.json .
RUN npm install
COPY . .
RUN npm run build --prod

# Stage 2: Serve the built app with the backend server
FROM node:18-alpine 
WORKDIR /app
COPY . .

RUN npm install -g http-server
EXPOSE 4200
CMD ["http-server", "-p", "4200"]
